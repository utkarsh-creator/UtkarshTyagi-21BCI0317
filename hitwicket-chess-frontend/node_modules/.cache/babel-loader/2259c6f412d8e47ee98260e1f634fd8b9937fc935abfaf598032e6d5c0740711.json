{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha\\\\hitwicket\\\\hitwicket-chess-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport Controls from './components/Controls';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    grid: Array(5).fill(null).map(() => Array(5).fill(null)),\n    currentPlayer: '',\n    gameOver: false,\n    winner: ''\n  });\n  useEffect(() => {\n    const ws = connectWebSocket(message => {\n      const newGameState = JSON.parse(message.body);\n      setGameState(newGameState);\n    });\n    return () => ws.disconnect();\n  }, []);\n  const handleMove = (character, direction) => {\n    if (!gameState.gameOver) {\n      sendMoveCommand({\n        character,\n        direction\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess-like Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      grid: gameState.grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      onMove: handleMove,\n      currentPlayer: gameState.currentPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Game Over! Winner: \", gameState.winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"V7+xh1yPAuo+IF4d85r5tfRS/p0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Board","Controls","connectWebSocket","sendMoveCommand","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","grid","Array","fill","map","currentPlayer","gameOver","winner","ws","message","newGameState","JSON","parse","body","disconnect","handleMove","character","direction","children","fileName","_jsxFileName","lineNumber","columnNumber","onMove","_c","$RefreshReg$"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport Controls from './components/Controls';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\n\nconst App = () => {\n    const [gameState, setGameState] = useState({\n        grid: Array(5).fill(null).map(() => Array(5).fill(null)),\n        currentPlayer: '',\n        gameOver: false,\n        winner: ''\n    });\n\n    useEffect(() => {\n        const ws = connectWebSocket((message) => {\n            const newGameState = JSON.parse(message.body);\n            setGameState(newGameState);\n        });\n\n        return () => ws.disconnect();\n    }, []);\n\n    const handleMove = (character, direction) => {\n        if (!gameState.gameOver) {\n            sendMoveCommand({ character, direction });\n        }\n    };\n\n    return (\n        <div>\n            <h1>Chess-like Game</h1>\n            <Board grid={gameState.grid} />\n            <Controls onMove={handleMove} currentPlayer={gameState.currentPlayer} />\n            {gameState.gameOver && <h2>Game Over! Winner: {gameState.winner}</h2>}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,MAAMF,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxDE,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,KAAK;IACfC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACZ,MAAMmB,EAAE,GAAGf,gBAAgB,CAAEgB,OAAO,IAAK;MACrC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;MAC7Cb,YAAY,CAACU,YAAY,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAMF,EAAE,CAACM,UAAU,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;IACzC,IAAI,CAAClB,SAAS,CAACO,QAAQ,EAAE;MACrBZ,eAAe,CAAC;QAAEsB,SAAS;QAAEC;MAAU,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1B,OAAA,CAACL,KAAK;MAACU,IAAI,EAAEF,SAAS,CAACE;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/B1B,OAAA,CAACJ,QAAQ;MAAC+B,MAAM,EAAER,UAAW;MAACV,aAAa,EAAEN,SAAS,CAACM;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvEvB,SAAS,CAACO,QAAQ,iBAAIV,OAAA;MAAAsB,QAAA,GAAI,qBAAmB,EAACnB,SAAS,CAACQ,MAAM;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEd,CAAC;AAACxB,EAAA,CA/BID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}