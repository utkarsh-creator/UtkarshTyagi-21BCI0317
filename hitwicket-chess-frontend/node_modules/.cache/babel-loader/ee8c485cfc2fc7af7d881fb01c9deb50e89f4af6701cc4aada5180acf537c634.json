{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha\\\\hitwicket\\\\hitwicket-chess-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport GameLog from './components/GameLog';\nimport GameOver from './components/GameOver';\nimport MoveButtons from './components/MoveButtons';\nimport { connectWebSocket, sendMove } from './websocket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [grid, setGrid] = useState(Array(5).fill(Array(5).fill(null)));\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [gameLog, setGameLog] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState('A');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    const client = connectWebSocket(message => {\n      if (message.type === 'GAME_STATE') {\n        setGrid(message.grid);\n        setCurrentPlayer(message.currentPlayer);\n      } else if (message.type === 'GAME_OVER') {\n        setGameOver(true);\n        setWinner(message.winner);\n      }\n    });\n    return () => client.deactivate();\n  }, []);\n  const handleCellClick = (row, col) => {\n    if (gameOver) return;\n    const character = grid[row][col];\n    if (character && character.startsWith(currentPlayer)) {\n      setSelectedCharacter({\n        row,\n        col,\n        character\n      });\n      // Fetch and set valid moves based on the selected character's type\n      // Assume `fetchValidMoves` function is implemented\n      setValidMoves(fetchValidMoves(character, row, col, grid));\n    }\n  };\n  const handleMoveClick = move => {\n    if (!selectedCharacter) return;\n    const moveCommand = `${selectedCharacter.character}:${move}`;\n    sendMove(client, {\n      moveCommand,\n      currentPlayer\n    });\n    setGameLog([...gameLog, moveCommand]);\n    setSelectedCharacter(null);\n    setValidMoves([]);\n  };\n  const handleRestart = () => {\n    setGameOver(false);\n    setWinner(null);\n    setGameLog([]);\n    // Reset game state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Turn-Based Chess-Like Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {\n      winner: winner,\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        grid: grid,\n        onCellClick: handleCellClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), validMoves.length > 0 && /*#__PURE__*/_jsxDEV(MoveButtons, {\n        validMoves: validMoves,\n        onMoveClick: handleMoveClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GameLog, {\n        moves: gameLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Player: \", currentPlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"knC3ACK9pq0HQ90cC2W1RGu/iyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Board","GameLog","GameOver","MoveButtons","connectWebSocket","sendMove","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","grid","setGrid","Array","fill","selectedCharacter","setSelectedCharacter","validMoves","setValidMoves","gameLog","setGameLog","currentPlayer","setCurrentPlayer","gameOver","setGameOver","winner","setWinner","client","message","type","deactivate","handleCellClick","row","col","character","startsWith","fetchValidMoves","handleMoveClick","move","moveCommand","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onRestart","onCellClick","length","onMoveClick","moves","_c","$RefreshReg$"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport GameLog from './components/GameLog';\nimport GameOver from './components/GameOver';\nimport MoveButtons from './components/MoveButtons';\nimport { connectWebSocket, sendMove } from './websocket';\n\nconst App = () => {\n  const [grid, setGrid] = useState(Array(5).fill(Array(5).fill(null)));\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [gameLog, setGameLog] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState('A');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  useEffect(() => {\n    const client = connectWebSocket((message) => {\n      if (message.type === 'GAME_STATE') {\n        setGrid(message.grid);\n        setCurrentPlayer(message.currentPlayer);\n      } else if (message.type === 'GAME_OVER') {\n        setGameOver(true);\n        setWinner(message.winner);\n      }\n    });\n    return () => client.deactivate();\n  }, []);\n\n  const handleCellClick = (row, col) => {\n    if (gameOver) return;\n    const character = grid[row][col];\n    if (character && character.startsWith(currentPlayer)) {\n      setSelectedCharacter({ row, col, character });\n      // Fetch and set valid moves based on the selected character's type\n      // Assume `fetchValidMoves` function is implemented\n      setValidMoves(fetchValidMoves(character, row, col, grid));\n    }\n  };\n\n  const handleMoveClick = (move) => {\n    if (!selectedCharacter) return;\n\n    const moveCommand = `${selectedCharacter.character}:${move}`;\n    sendMove(client, { moveCommand, currentPlayer });\n\n    setGameLog([...gameLog, moveCommand]);\n    setSelectedCharacter(null);\n    setValidMoves([]);\n  };\n\n  const handleRestart = () => {\n    setGameOver(false);\n    setWinner(null);\n    setGameLog([]);\n    // Reset game state\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Turn-Based Chess-Like Game</h1>\n      {gameOver ? (\n        <GameOver winner={winner} onRestart={handleRestart} />\n      ) : (\n        <>\n          <Board grid={grid} onCellClick={handleCellClick} />\n          {validMoves.length > 0 && (\n            <MoveButtons validMoves={validMoves} onMoveClick={handleMoveClick} />\n          )}\n          <GameLog moves={gameLog} />\n          <p>Current Player: {currentPlayer}</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}