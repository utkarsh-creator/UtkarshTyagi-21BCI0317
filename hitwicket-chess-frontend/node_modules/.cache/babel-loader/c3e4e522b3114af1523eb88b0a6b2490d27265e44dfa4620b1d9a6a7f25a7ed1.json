{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha\\\\hitwicket\\\\hitwicket-chess-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport GameBoard from './components/Board';\nimport Controls from './components/Controls';\nimport CurrentPlayer from './components/CurrentPlayer';\nimport DeploymentForm from './components/DeploymentForm';\nimport MoveHistory from './components/MoveHistory';\nimport { connectWebSocket, sendDeploymentData, sendMoveCommand } from './websocket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState({\n    currentPlayer: 'A',\n    board: Array(5).fill(null).map(() => Array(5).fill(null)),\n    moveHistory: [],\n    gameOver: false,\n    winner: null\n  });\n  useEffect(() => {\n    const {\n      disconnect\n    } = connectWebSocket(message => {\n      const newState = JSON.parse(message.body);\n      console.log('Updated game state:', newState); // Debugging\n      setGameState(newState);\n    });\n    return () => {\n      disconnect();\n    };\n  }, []);\n  const handleDeployment = deployment => {\n    console.log('Deployment data received:', deployment); // Debugging\n    sendDeploymentData(deployment);\n    setGameState(prevState => ({\n      ...prevState,\n      board: deployment\n    }));\n  };\n  const handleMove = move => {\n    sendMoveCommand(move);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"5x5 Strategy Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), !gameState.gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DeploymentForm, {\n        onDeploy: handleDeployment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n        board: gameState.board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CurrentPlayer, {\n        player: gameState.currentPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MoveHistory, {\n        history: gameState.moveHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        onMove: handleMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Game Over! Winner: \", gameState.winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"MDtslH/LfbUp3XrgYgPoA6DvcKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","GameBoard","Controls","CurrentPlayer","DeploymentForm","MoveHistory","connectWebSocket","sendDeploymentData","sendMoveCommand","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","gameState","setGameState","currentPlayer","board","Array","fill","map","moveHistory","gameOver","winner","disconnect","message","newState","JSON","parse","body","console","log","handleDeployment","deployment","prevState","handleMove","move","children","fileName","_jsxFileName","lineNumber","columnNumber","onDeploy","player","history","onMove","_c","$RefreshReg$"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport GameBoard from './components/Board';\nimport Controls from './components/Controls';\nimport CurrentPlayer from './components/CurrentPlayer';\nimport DeploymentForm from './components/DeploymentForm';\nimport MoveHistory from './components/MoveHistory';\nimport { connectWebSocket, sendDeploymentData, sendMoveCommand } from './websocket';\n\nfunction App() {\n    const [gameState, setGameState] = useState({\n        currentPlayer: 'A',\n        board: Array(5).fill(null).map(() => Array(5).fill(null)),\n        moveHistory: [],\n        gameOver: false,\n        winner: null,\n    });\n\n    useEffect(() => {\n        const { disconnect } = connectWebSocket((message) => {\n            const newState = JSON.parse(message.body);\n            console.log('Updated game state:', newState); // Debugging\n            setGameState(newState);\n        });\n\n        return () => {\n            disconnect();\n        };\n    }, []);\n\n    const handleDeployment = (deployment) => {\n        console.log('Deployment data received:', deployment); // Debugging\n        sendDeploymentData(deployment);\n\n        setGameState((prevState) => ({\n            ...prevState,\n            board: deployment,\n        }));\n    };\n\n    const handleMove = (move) => {\n        sendMoveCommand(move);\n    };\n\n    return (\n        <div>\n            <h1>5x5 Strategy Game</h1>\n            {!gameState.gameOver ? (\n                <>\n                    <DeploymentForm onDeploy={handleDeployment} />\n                    <GameBoard board={gameState.board} />\n                    <CurrentPlayer player={gameState.currentPlayer} />\n                    <MoveHistory history={gameState.moveHistory} />\n                    <Controls onMove={handleMove} />\n                </>\n            ) : (\n                <h2>Game Over! Winner: {gameState.winner}</h2>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}