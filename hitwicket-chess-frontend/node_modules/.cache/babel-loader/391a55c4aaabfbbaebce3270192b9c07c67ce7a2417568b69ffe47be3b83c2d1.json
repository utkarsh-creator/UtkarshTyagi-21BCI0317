{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nconst socket = new SockJS('http://localhost:8080/game'); // WebSocket endpoint\nconst client = new Client({\n  webSocketFactory: () => new SockJS('http://localhost:8080/game'),\n  connectHeaders: {},\n  debug: str => console.log(str),\n  onConnect: frame => {\n    console.log('Connected: ' + frame);\n    client.subscribe('/topic/gameState', message => {\n      if (message.body) {\n        const gameState = JSON.parse(message.body);\n        console.log('Game State:', gameState);\n        // Handle game state update here\n      }\n    });\n  },\n  onDisconnect: frame => {\n    console.log('Disconnected: ' + frame);\n  },\n  onStompError: frame => {\n    console.error('STOMP Error: ' + frame);\n  },\n  reconnectDelay: 5000\n});\nexport default client;","map":{"version":3,"names":["Client","SockJS","socket","client","webSocketFactory","connectHeaders","debug","str","console","log","onConnect","frame","subscribe","message","body","gameState","JSON","parse","onDisconnect","onStompError","error","reconnectDelay"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/websocket.js"],"sourcesContent":["import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nconst socket = new SockJS('http://localhost:8080/game'); // WebSocket endpoint\nconst client = new Client({\n    webSocketFactory: () => new SockJS('http://localhost:8080/game'),\n    connectHeaders: {},\n    debug: (str) => console.log(str),\n    onConnect: (frame) => {\n        console.log('Connected: ' + frame);\n        client.subscribe('/topic/gameState', (message) => {\n            if (message.body) {\n                const gameState = JSON.parse(message.body);\n                console.log('Game State:', gameState);\n                // Handle game state update here\n            }\n        });\n    },\n    onDisconnect: (frame) => {\n        console.log('Disconnected: ' + frame);\n    },\n    onStompError: (frame) => {\n        console.error('STOMP Error: ' + frame);\n    },\n    reconnectDelay: 5000,\n});\n\nexport default client;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAElC,MAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,4BAA4B,CAAC,CAAC,CAAC;AACzD,MAAME,MAAM,GAAG,IAAIH,MAAM,CAAC;EACtBI,gBAAgB,EAAEA,CAAA,KAAM,IAAIH,MAAM,CAAC,4BAA4B,CAAC;EAChEI,cAAc,EAAE,CAAC,CAAC;EAClBC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAChCG,SAAS,EAAGC,KAAK,IAAK;IAClBH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGE,KAAK,CAAC;IAClCR,MAAM,CAACS,SAAS,CAAC,kBAAkB,EAAGC,OAAO,IAAK;MAC9C,IAAIA,OAAO,CAACC,IAAI,EAAE;QACd,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACC,IAAI,CAAC;QAC1CN,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEM,SAAS,CAAC;QACrC;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACDG,YAAY,EAAGP,KAAK,IAAK;IACrBH,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGE,KAAK,CAAC;EACzC,CAAC;EACDQ,YAAY,EAAGR,KAAK,IAAK;IACrBH,OAAO,CAACY,KAAK,CAAC,eAAe,GAAGT,KAAK,CAAC;EAC1C,CAAC;EACDU,cAAc,EAAE;AACpB,CAAC,CAAC;AAEF,eAAelB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}