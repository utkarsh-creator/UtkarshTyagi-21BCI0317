{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nlet stompClient = null;\nexport const connectWebSocket = onMessageReceived => {\n  const socket = new SockJS('http://localhost:8080/game');\n  stompClient = new Client({\n    brokerURL: socket,\n    connectHeaders: {},\n    debug: str => {\n      console.log(str);\n    },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000,\n    onConnect: frame => {\n      console.log('Connected:', frame);\n      stompClient.subscribe('/topic/gameState', message => {\n        onMessageReceived(message);\n      });\n    },\n    onStompError: frame => {\n      console.error('Error:', frame);\n    }\n  });\n  stompClient.activate();\n  return {\n    disconnect: () => {\n      if (stompClient) {\n        stompClient.deactivate();\n        console.log('Disconnected');\n      }\n    }\n  };\n};\nexport const sendMoveCommand = move => {\n  if (stompClient && stompClient.connected) {\n    stompClient.publish({\n      destination: '/app/move',\n      body: JSON.stringify(move)\n    });\n  }\n};","map":{"version":3,"names":["Client","SockJS","stompClient","connectWebSocket","onMessageReceived","socket","brokerURL","connectHeaders","debug","str","console","log","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","frame","subscribe","message","onStompError","error","activate","disconnect","deactivate","sendMoveCommand","move","connected","publish","destination","body","JSON","stringify"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/websocket.js"],"sourcesContent":["import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nlet stompClient = null;\n\nexport const connectWebSocket = (onMessageReceived) => {\n    const socket = new SockJS('http://localhost:8080/game');\n    stompClient = new Client({\n        brokerURL: socket,\n        connectHeaders: {},\n        debug: (str) => {\n            console.log(str);\n        },\n        reconnectDelay: 5000,\n        heartbeatIncoming: 4000,\n        heartbeatOutgoing: 4000,\n        onConnect: (frame) => {\n            console.log('Connected:', frame);\n            stompClient.subscribe('/topic/gameState', (message) => {\n                onMessageReceived(message);\n            });\n        },\n        onStompError: (frame) => {\n            console.error('Error:', frame);\n        },\n    });\n\n    stompClient.activate();\n\n    return {\n        disconnect: () => {\n            if (stompClient) {\n                stompClient.deactivate();\n                console.log('Disconnected');\n            }\n        }\n    };\n};\n\nexport const sendMoveCommand = (move) => {\n    if (stompClient && stompClient.connected) {\n        stompClient.publish({\n            destination: '/app/move',\n            body: JSON.stringify(move),\n        });\n    }\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAElC,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAIC,iBAAiB,IAAK;EACnD,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAAC,4BAA4B,CAAC;EACvDC,WAAW,GAAG,IAAIF,MAAM,CAAC;IACrBM,SAAS,EAAED,MAAM;IACjBE,cAAc,EAAE,CAAC,CAAC;IAClBC,KAAK,EAAGC,GAAG,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC;IACDG,cAAc,EAAE,IAAI;IACpBC,iBAAiB,EAAE,IAAI;IACvBC,iBAAiB,EAAE,IAAI;IACvBC,SAAS,EAAGC,KAAK,IAAK;MAClBN,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEK,KAAK,CAAC;MAChCd,WAAW,CAACe,SAAS,CAAC,kBAAkB,EAAGC,OAAO,IAAK;QACnDd,iBAAiB,CAACc,OAAO,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC;IACDC,YAAY,EAAGH,KAAK,IAAK;MACrBN,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEJ,KAAK,CAAC;IAClC;EACJ,CAAC,CAAC;EAEFd,WAAW,CAACmB,QAAQ,CAAC,CAAC;EAEtB,OAAO;IACHC,UAAU,EAAEA,CAAA,KAAM;MACd,IAAIpB,WAAW,EAAE;QACbA,WAAW,CAACqB,UAAU,CAAC,CAAC;QACxBb,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC/B;IACJ;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMa,eAAe,GAAIC,IAAI,IAAK;EACrC,IAAIvB,WAAW,IAAIA,WAAW,CAACwB,SAAS,EAAE;IACtCxB,WAAW,CAACyB,OAAO,CAAC;MAChBC,WAAW,EAAE,WAAW;MACxBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}