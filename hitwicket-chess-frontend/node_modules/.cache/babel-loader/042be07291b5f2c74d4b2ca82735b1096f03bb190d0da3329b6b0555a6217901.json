{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha\\\\hitwicket\\\\hitwicket-chess-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GameBoard from './components/Board';\nimport CombatLogic from './components/CombatLogic';\nimport Controls from './components/Controls';\nimport CurrentPlayer from './components/CurrentPlayer';\nimport DeploymentForm from './components/DeploymentForm';\nimport MoveHistory from './components/MoveHistory';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState({\n    currentPlayer: 'A',\n    board: Array(5).fill(null).map(() => Array(5).fill(null)),\n    moveHistory: [],\n    gameOver: false,\n    winner: null\n  });\n  const handleDeployment = deployment => {\n    // Deploy players' characters based on the initial setup from DeploymentForm\n    setGameState(prevState => ({\n      ...prevState,\n      board: deployment\n    }));\n  };\n  const handleMove = move => {\n    const {\n      updatedBoard,\n      updatedMoveHistory,\n      gameOver,\n      winner\n    } = CombatLogic(gameState, move);\n    setGameState({\n      ...gameState,\n      board: updatedBoard,\n      moveHistory: updatedMoveHistory,\n      currentPlayer: gameState.currentPlayer === 'A' ? 'B' : 'A',\n      gameOver,\n      winner\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"5x5 Strategy Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), !gameState.gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DeploymentForm, {\n        onDeploy: handleDeployment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n        board: gameState.board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CurrentPlayer, {\n        player: gameState.currentPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MoveHistory, {\n        history: gameState.moveHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        onMove: handleMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Game Over! Winner: \", gameState.winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Vi7ojZjWnbfvntCfxGwrIJWE/co=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GameBoard","CombatLogic","Controls","CurrentPlayer","DeploymentForm","MoveHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","gameState","setGameState","currentPlayer","board","Array","fill","map","moveHistory","gameOver","winner","handleDeployment","deployment","prevState","handleMove","move","updatedBoard","updatedMoveHistory","children","fileName","_jsxFileName","lineNumber","columnNumber","onDeploy","player","history","onMove","_c","$RefreshReg$"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GameBoard from './components/Board';\nimport CombatLogic from './components/CombatLogic';\nimport Controls from './components/Controls';\nimport CurrentPlayer from './components/CurrentPlayer';\nimport DeploymentForm from './components/DeploymentForm';\nimport MoveHistory from './components/MoveHistory';\n\nfunction App() {\n    const [gameState, setGameState] = useState({\n        currentPlayer: 'A',\n        board: Array(5).fill(null).map(() => Array(5).fill(null)),\n        moveHistory: [],\n        gameOver: false,\n        winner: null,\n    });\n    \n    const handleDeployment = (deployment) => {\n        // Deploy players' characters based on the initial setup from DeploymentForm\n        setGameState((prevState) => ({\n            ...prevState,\n            board: deployment,\n        }));\n    };\n\n    const handleMove = (move) => {\n        const { updatedBoard, updatedMoveHistory, gameOver, winner } = CombatLogic(gameState, move);\n        setGameState({\n            ...gameState,\n            board: updatedBoard,\n            moveHistory: updatedMoveHistory,\n            currentPlayer: gameState.currentPlayer === 'A' ? 'B' : 'A',\n            gameOver,\n            winner,\n        });\n    };\n\n    return (\n        <div>\n            <h1>5x5 Strategy Game</h1>\n            {!gameState.gameOver ? (\n                <>\n                    <DeploymentForm onDeploy={handleDeployment} />\n                    <GameBoard board={gameState.board} />\n                    <CurrentPlayer player={gameState.currentPlayer} />\n                    <MoveHistory history={gameState.moveHistory} />\n                    <Controls onMove={handleMove} />\n                </>\n            ) : (\n                <h2>Game Over! Winner: {gameState.winner}</h2>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}