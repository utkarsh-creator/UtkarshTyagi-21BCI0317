{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nconst socketUrl = 'http://localhost:8080/game'; // Replace with your WebSocket server URL\n\nexport const connectWebSocket = onMessageReceived => {\n  const socket = new SockJS(socketUrl);\n  const stompClient = new Client({\n    webSocketFactory: () => socket,\n    onConnect: () => console.log(\"Connected to WebSocket\"),\n    onStompError: frame => console.error(\"WebSocket error:\", frame),\n    onDisconnect: () => console.log(\"Disconnected from WebSocket\")\n  });\n  stompClient.onConnect = () => {\n    stompClient.subscribe('/topic/game-state', message => {\n      onMessageReceived(JSON.parse(message.body));\n    });\n  };\n  stompClient.activate();\n  return stompClient;\n};\nexport const sendMove = (client, move) => {\n  client.publish({\n    destination: '/app/move',\n    body: JSON.stringify(move)\n  });\n};","map":{"version":3,"names":["Client","SockJS","socketUrl","connectWebSocket","onMessageReceived","socket","stompClient","webSocketFactory","onConnect","console","log","onStompError","frame","error","onDisconnect","subscribe","message","JSON","parse","body","activate","sendMove","client","move","publish","destination","stringify"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/websocket.js"],"sourcesContent":["import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nconst socketUrl = 'http://localhost:8080/game'; // Replace with your WebSocket server URL\n\nexport const connectWebSocket = (onMessageReceived) => {\n    const socket = new SockJS(socketUrl);\n    const stompClient = new Client({\n    webSocketFactory: () => socket,\n    onConnect: () => console.log(\"Connected to WebSocket\"),\n    onStompError: (frame) => console.error(\"WebSocket error:\", frame),\n    onDisconnect: () => console.log(\"Disconnected from WebSocket\"),\n    });\n\n    stompClient.onConnect = () => {\n    stompClient.subscribe('/topic/game-state', (message) => {\n        onMessageReceived(JSON.parse(message.body));\n    });\n    };\n\n    stompClient.activate();\n    return stompClient;\n};\n\nexport const sendMove = (client, move) => {\n    client.publish({ destination: '/app/move', body: JSON.stringify(move) });\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAElC,MAAMC,SAAS,GAAG,4BAA4B,CAAC,CAAC;;AAEhD,OAAO,MAAMC,gBAAgB,GAAIC,iBAAiB,IAAK;EACnD,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACC,SAAS,CAAC;EACpC,MAAMI,WAAW,GAAG,IAAIN,MAAM,CAAC;IAC/BO,gBAAgB,EAAEA,CAAA,KAAMF,MAAM;IAC9BG,SAAS,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACtDC,YAAY,EAAGC,KAAK,IAAKH,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAED,KAAK,CAAC;IACjEE,YAAY,EAAEA,CAAA,KAAML,OAAO,CAACC,GAAG,CAAC,6BAA6B;EAC7D,CAAC,CAAC;EAEFJ,WAAW,CAACE,SAAS,GAAG,MAAM;IAC9BF,WAAW,CAACS,SAAS,CAAC,mBAAmB,EAAGC,OAAO,IAAK;MACpDZ,iBAAiB,CAACa,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC;EACF,CAAC;EAEDb,WAAW,CAACc,QAAQ,CAAC,CAAC;EACtB,OAAOd,WAAW;AACtB,CAAC;AAED,OAAO,MAAMe,QAAQ,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EACtCD,MAAM,CAACE,OAAO,CAAC;IAAEC,WAAW,EAAE,WAAW;IAAEN,IAAI,EAAEF,IAAI,CAACS,SAAS,CAACH,IAAI;EAAE,CAAC,CAAC;AAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}