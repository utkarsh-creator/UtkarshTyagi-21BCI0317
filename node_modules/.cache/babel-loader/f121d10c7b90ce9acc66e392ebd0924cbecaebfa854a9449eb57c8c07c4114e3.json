{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nlet stompClient = null;\nexport const connectWebSocket = onMessageReceived => {\n  const socket = new SockJS('http://localhost:8080/game');\n  stompClient = Stomp.over(socket);\n  stompClient.connect({}, frame => {\n    console.log('Connected:', frame);\n    stompClient.subscribe('/topic/gameState', message => {\n      onMessageReceived(message);\n    });\n  }, error => {\n    console.error('WebSocket error:', error);\n  });\n  return {\n    disconnect: () => {\n      if (stompClient) {\n        stompClient.disconnect(() => {\n          console.log('Disconnected');\n        });\n      }\n    }\n  };\n};\nexport const sendMoveCommand = move => {\n  if (stompClient) {\n    stompClient.send('/app/move', {}, JSON.stringify(move));\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","stompClient","connectWebSocket","onMessageReceived","socket","over","connect","frame","console","log","subscribe","message","error","disconnect","sendMoveCommand","move","send","JSON","stringify"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/websocket.js"],"sourcesContent":["import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\n\nlet stompClient = null;\n\nexport const connectWebSocket = (onMessageReceived) => {\n    const socket = new SockJS('http://localhost:8080/game');\n    stompClient = Stomp.over(socket);\n\n    stompClient.connect({}, (frame) => {\n        console.log('Connected:', frame);\n        stompClient.subscribe('/topic/gameState', (message) => {\n            onMessageReceived(message);\n        });\n    }, (error) => {\n        console.error('WebSocket error:', error);\n    });\n\n    return {\n        disconnect: () => {\n            if (stompClient) {\n                stompClient.disconnect(() => {\n                    console.log('Disconnected');\n                });\n            }\n        }\n    };\n};\n\nexport const sendMoveCommand = (move) => {\n    if (stompClient) {\n        stompClient.send('/app/move', {}, JSON.stringify(move));\n    }\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,SAAS;AAE3B,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAIC,iBAAiB,IAAK;EACnD,MAAMC,MAAM,GAAG,IAAIL,MAAM,CAAC,4BAA4B,CAAC;EACvDE,WAAW,GAAGD,KAAK,CAACK,IAAI,CAACD,MAAM,CAAC;EAEhCH,WAAW,CAACK,OAAO,CAAC,CAAC,CAAC,EAAGC,KAAK,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,KAAK,CAAC;IAChCN,WAAW,CAACS,SAAS,CAAC,kBAAkB,EAAGC,OAAO,IAAK;MACnDR,iBAAiB,CAACQ,OAAO,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC,EAAGC,KAAK,IAAK;IACVJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC5C,CAAC,CAAC;EAEF,OAAO;IACHC,UAAU,EAAEA,CAAA,KAAM;MACd,IAAIZ,WAAW,EAAE;QACbA,WAAW,CAACY,UAAU,CAAC,MAAM;UACzBL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC/B,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMK,eAAe,GAAIC,IAAI,IAAK;EACrC,IAAId,WAAW,EAAE;IACbA,WAAW,CAACe,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;EAC3D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}