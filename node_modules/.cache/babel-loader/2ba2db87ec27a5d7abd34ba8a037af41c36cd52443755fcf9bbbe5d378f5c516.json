{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha\\\\hitwicket\\\\hitwicket-chess-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Board from '.component/Board';\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [grid, setGrid] = useState([]); // Ensure grid is initialized\n\n  useEffect(() => {\n    const {\n      disconnect\n    } = connectWebSocket(message => {\n      console.log('Received message:', message); // Debugging statement\n      setMessages(prevMessages => [...prevMessages, message.body]);\n\n      // Assuming the message body contains grid data\n      setGrid(message.body);\n    });\n    return () => {\n      disconnect();\n    };\n  }, []);\n  const handleMove = move => {\n    console.log('Sending move:', move); // Debugging statement\n    sendMoveCommand(move);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      grid: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMove({\n        x: 1,\n        y: 2\n      }),\n      children: \"Send Move\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"vJSY7jB/DykXq4HMUcP6XSBdps4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","React","useEffect","useState","connectWebSocket","sendMoveCommand","jsxDEV","_jsxDEV","App","_s","messages","setMessages","grid","setGrid","disconnect","message","console","log","prevMessages","body","handleMove","move","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","x","y","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/App.js"],"sourcesContent":["import Board from '.component/Board';\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [grid, setGrid] = useState([]); // Ensure grid is initialized\n\n    useEffect(() => {\n        const { disconnect } = connectWebSocket((message) => {\n            console.log('Received message:', message); // Debugging statement\n            setMessages((prevMessages) => [...prevMessages, message.body]);\n\n            // Assuming the message body contains grid data\n            setGrid(message.body); \n        });\n\n        return () => {\n            disconnect(); \n        };\n    }, []); \n\n    const handleMove = (move) => {\n        console.log('Sending move:', move); // Debugging statement\n        sendMoveCommand(move);\n    };\n\n    return (\n        <div>\n            <h1>WebSocket App</h1>\n            <Board grid={grid} /> {/* Pass grid to Board */}\n            <button onClick={() => handleMove({ x: 1, y: 2 })}>Send Move</button>\n            <div>\n                <h2>Messages:</h2>\n                <ul>\n                    {messages.map((msg, index) => (\n                        <li key={index}>{msg}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAM;MAAEY;IAAW,CAAC,GAAGV,gBAAgB,CAAEW,OAAO,IAAK;MACjDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC,CAAC,CAAC;MAC3CJ,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,OAAO,CAACI,IAAI,CAAC,CAAC;;MAE9D;MACAN,OAAO,CAACE,OAAO,CAACI,IAAI,CAAC;IACzB,CAAC,CAAC;IAEF,OAAO,MAAM;MACTL,UAAU,CAAC,CAAC;IAChB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAIC,IAAI,IAAK;IACzBL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEI,IAAI,CAAC,CAAC,CAAC;IACpChB,eAAe,CAACgB,IAAI,CAAC;EACzB,CAAC;EAED,oBACId,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA,CAACP,KAAK;MAACY,IAAI,EAAEA;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACtBnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC;QAAEQ,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC,CAAE;MAAAP,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrEnB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBnB,OAAA;QAAAe,QAAA,EACKZ,QAAQ,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBzB,OAAA;UAAAe,QAAA,EAAiBS;QAAG,GAAXC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjB,EAAA,CAtCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}