{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nlet client;\nexport const connectWebSocket = onMessage => {\n  const socket = new SockJS('http://localhost:8080/game');\n  client = new Client({\n    webSocketFactory: () => socket,\n    connectHeaders: {},\n    debug: msg => console.log(msg),\n    onConnect: () => {\n      console.log('Connected to WebSocket server');\n      client.subscribe('/topic/gameState', message => {\n        if (onMessage) {\n          onMessage(message);\n        }\n      });\n    },\n    onStompError: frame => {\n      console.error('STOMP Error:', frame.headers.message);\n    },\n    onWebSocketClose: () => console.log('WebSocket closed'),\n    onWebSocketError: error => console.error('WebSocket Error:', error)\n  });\n  client.activate();\n  return {\n    disconnect: () => client.deactivate()\n  };\n};\nexport const sendMoveCommand = move => {\n  if (client && client.connected) {\n    client.publish({\n      destination: '/app/move',\n      body: JSON.stringify(move)\n    });\n  } else {\n    console.error('WebSocket client is not connected');\n  }\n};","map":{"version":3,"names":["Client","SockJS","client","connectWebSocket","onMessage","socket","webSocketFactory","connectHeaders","debug","msg","console","log","onConnect","subscribe","message","onStompError","frame","error","headers","onWebSocketClose","onWebSocketError","activate","disconnect","deactivate","sendMoveCommand","move","connected","publish","destination","body","JSON","stringify"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/websocket.js"],"sourcesContent":["import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nlet client;\n\nexport const connectWebSocket = (onMessage) => {\n    const socket = new SockJS('http://localhost:8080/game');\n    \n    client = new Client({\n        webSocketFactory: () => socket,\n        connectHeaders: {\n        },\n        debug: (msg) => console.log(msg),\n        onConnect: () => {\n            console.log('Connected to WebSocket server');\n            client.subscribe('/topic/gameState', (message) => {\n                if (onMessage) {\n                    onMessage(message);\n                }\n            });\n        },\n        onStompError: (frame) => {\n            console.error('STOMP Error:', frame.headers.message);\n        },\n        onWebSocketClose: () => console.log('WebSocket closed'),\n        onWebSocketError: (error) => console.error('WebSocket Error:', error),\n    });\n\n    client.activate();\n\n    return {\n        disconnect: () => client.deactivate(),\n    };\n};\n\nexport const sendMoveCommand = (move) => {\n    if (client && client.connected) {\n        client.publish({\n            destination: '/app/move',\n            body: JSON.stringify(move),\n        });\n    } else {\n        console.error('WebSocket client is not connected');\n    }\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAElC,IAAIC,MAAM;AAEV,OAAO,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;EAC3C,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAAC,4BAA4B,CAAC;EAEvDC,MAAM,GAAG,IAAIF,MAAM,CAAC;IAChBM,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,cAAc,EAAE,CAChB,CAAC;IACDC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChCG,SAAS,EAAEA,CAAA,KAAM;MACbF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CT,MAAM,CAACW,SAAS,CAAC,kBAAkB,EAAGC,OAAO,IAAK;QAC9C,IAAIV,SAAS,EAAE;UACXA,SAAS,CAACU,OAAO,CAAC;QACtB;MACJ,CAAC,CAAC;IACN,CAAC;IACDC,YAAY,EAAGC,KAAK,IAAK;MACrBN,OAAO,CAACO,KAAK,CAAC,cAAc,EAAED,KAAK,CAACE,OAAO,CAACJ,OAAO,CAAC;IACxD,CAAC;IACDK,gBAAgB,EAAEA,CAAA,KAAMT,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACvDS,gBAAgB,EAAGH,KAAK,IAAKP,OAAO,CAACO,KAAK,CAAC,kBAAkB,EAAEA,KAAK;EACxE,CAAC,CAAC;EAEFf,MAAM,CAACmB,QAAQ,CAAC,CAAC;EAEjB,OAAO;IACHC,UAAU,EAAEA,CAAA,KAAMpB,MAAM,CAACqB,UAAU,CAAC;EACxC,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,IAAI,IAAK;EACrC,IAAIvB,MAAM,IAAIA,MAAM,CAACwB,SAAS,EAAE;IAC5BxB,MAAM,CAACyB,OAAO,CAAC;MACXC,WAAW,EAAE,WAAW;MACxBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC,MAAM;IACHf,OAAO,CAACO,KAAK,CAAC,mCAAmC,CAAC;EACtD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}