{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha\\\\hitwicket\\\\hitwicket-chess-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [messages, setMessages] = useState([]);\n\n  // useEffect(() => {\n  //     const { disconnect } = connectWebSocket((message) => {\n  //         console.log('Received message:', message);\n\n  //         try {\n  //             const gridData = JSON.parse(message.body);\n  //             console.log('Parsed grid data:', gridData);\n\n  //             if (Array.isArray(gridData) && Array.isArray(gridData[0])) {\n  //                 setGrid(gridData);\n  //             } else {\n  //                 console.error('Invalid grid data format:', gridData);\n  //             }\n  //         } catch (error) {\n  //             console.error('Error parsing message body:', error);\n  //         }\n\n  //         setMessages((prevMessages) => [...prevMessages, message.body]);\n  //     });\n\n  //     return () => {\n  //         disconnect(); \n  //     };\n  // }, []);\n  useEffect(() => {\n    const {\n      disconnect\n    } = connectWebSocket(message => {\n      console.log('Received message:', message.body);\n      try {\n        const data = JSON.parse(message.body);\n        console.log('Parsed data:', data);\n        setMessages(prevMessages => [...prevMessages, data]);\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    });\n    return () => {\n      disconnect();\n    };\n  }, []);\n  const handleMove = move => {\n    sendMoveCommand(move);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMove({\n        x: 1,\n        y: 2\n      }),\n      children: \"Send Move\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      grid: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"b7c+lMBqSWjk5OWUAhCDOEHk2ik=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Board","connectWebSocket","sendMoveCommand","jsxDEV","_jsxDEV","App","_s","grid","setGrid","messages","setMessages","disconnect","message","console","log","body","data","JSON","parse","prevMessages","error","handleMove","move","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","x","y","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\n\nfunction App() {\n    const [grid, setGrid] = useState([]);\n    const [messages, setMessages] = useState([]);\n\n    // useEffect(() => {\n    //     const { disconnect } = connectWebSocket((message) => {\n    //         console.log('Received message:', message);\n\n    //         try {\n    //             const gridData = JSON.parse(message.body);\n    //             console.log('Parsed grid data:', gridData);\n\n    //             if (Array.isArray(gridData) && Array.isArray(gridData[0])) {\n    //                 setGrid(gridData);\n    //             } else {\n    //                 console.error('Invalid grid data format:', gridData);\n    //             }\n    //         } catch (error) {\n    //             console.error('Error parsing message body:', error);\n    //         }\n\n    //         setMessages((prevMessages) => [...prevMessages, message.body]);\n    //     });\n\n    //     return () => {\n    //         disconnect(); \n    //     };\n    // }, []);\n    useEffect(() => {\n      const { disconnect } = connectWebSocket((message) => {\n          console.log('Received message:', message.body);\n          try {\n              const data = JSON.parse(message.body);\n              console.log('Parsed data:', data);\n              setMessages((prevMessages) => [...prevMessages, data]);\n          } catch (error) {\n              console.error('Error parsing message:', error);\n          }\n      });\n  \n      return () => {\n          disconnect(); \n      };\n  }, []);\n\n    const handleMove = (move) => {\n        sendMoveCommand(move);\n    };\n\n    return (\n        <div>\n            <h1>WebSocket App</h1>\n            <button onClick={() => handleMove({ x: 1, y: 2 })}>Send Move</button>\n            <div>\n                <h2>Messages:</h2>\n                <ul>\n                    {messages.map((msg, index) => (\n                        <li key={index}>{msg}</li>\n                    ))}\n                </ul>\n            </div>\n            <Board grid={grid} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}