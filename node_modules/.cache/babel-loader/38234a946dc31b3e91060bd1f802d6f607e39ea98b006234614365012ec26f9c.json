{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha\\\\hitwicket\\\\hitwicket-chess-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport Controls from './components/Controls';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    grid: Array(5).fill(Array(5).fill(null)),\n    currentPlayer: '',\n    gameOver: false,\n    winner: ''\n  });\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    const socket = connectWebSocket(message => {\n      const newGameState = JSON.parse(message.body);\n      setGameState(newGameState);\n    });\n    setWs(socket);\n    return () => {\n      if (ws) {\n        ws.disconnect();\n      }\n    };\n  }, [ws]);\n  const handleMove = (character, direction) => {\n    if (!gameState.gameOver) {\n      sendMoveCommand({\n        character,\n        direction\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess-like Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      grid: gameState.grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      onMove: handleMove,\n      currentPlayer: gameState.currentPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Game Over! Winner: \", gameState.winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"aQQkugOEY8BkFx2czqP7aynBUdo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Board","Controls","connectWebSocket","sendMoveCommand","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","grid","Array","fill","currentPlayer","gameOver","winner","ws","setWs","socket","message","newGameState","JSON","parse","body","disconnect","handleMove","character","direction","children","fileName","_jsxFileName","lineNumber","columnNumber","onMove","_c","$RefreshReg$"],"sources":["C:/Users/Trisha/hitwicket/hitwicket-chess-frontend/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport Controls from './components/Controls';\nimport { connectWebSocket, sendMoveCommand } from './websocket';\n\nconst App = () => {\n    const [gameState, setGameState] = useState({\n        grid: Array(5).fill(Array(5).fill(null)),\n        currentPlayer: '',\n        gameOver: false,\n        winner: ''\n    });\n\n    const [ws, setWs] = useState(null);\n\n    useEffect(() => {\n        const socket = connectWebSocket((message) => {\n            const newGameState = JSON.parse(message.body);\n            setGameState(newGameState);\n        });\n\n        setWs(socket);\n\n        return () => {\n            if (ws) {\n                ws.disconnect();\n            }\n        };\n    }, [ws]);\n\n    const handleMove = (character, direction) => {\n        if (!gameState.gameOver) {\n            sendMoveCommand({ character, direction });\n        }\n    };\n\n    return (\n        <div>\n            <h1>Chess-like Game</h1>\n            <Board grid={gameState.grid} />\n            <Controls onMove={handleMove} currentPlayer={gameState.currentPlayer} />\n            {gameState.gameOver && <h2>Game Over! Winner: {gameState.winner}</h2>}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxCC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,KAAK;IACfC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,MAAMoB,MAAM,GAAGhB,gBAAgB,CAAEiB,OAAO,IAAK;MACzC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;MAC7Cd,YAAY,CAACW,YAAY,CAAC;IAC9B,CAAC,CAAC;IAEFH,KAAK,CAACC,MAAM,CAAC;IAEb,OAAO,MAAM;MACT,IAAIF,EAAE,EAAE;QACJA,EAAE,CAACQ,UAAU,CAAC,CAAC;MACnB;IACJ,CAAC;EACL,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,MAAMS,UAAU,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;IACzC,IAAI,CAACnB,SAAS,CAACM,QAAQ,EAAE;MACrBX,eAAe,CAAC;QAAEuB,SAAS;QAAEC;MAAU,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,oBACItB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3B,OAAA,CAACL,KAAK;MAACU,IAAI,EAAEF,SAAS,CAACE;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/B3B,OAAA,CAACJ,QAAQ;MAACgC,MAAM,EAAER,UAAW;MAACZ,aAAa,EAAEL,SAAS,CAACK;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvExB,SAAS,CAACM,QAAQ,iBAAIT,OAAA;MAAAuB,QAAA,GAAI,qBAAmB,EAACpB,SAAS,CAACO,MAAM;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEd,CAAC;AAACzB,EAAA,CAvCID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAyCT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}